{"name":"Ember-cli-sliding-menu","tagline":"A very easy to use sliding-menu addon","body":"### Welcome to ember-cli-sliding-menu addon\r\nThis is another convenient component representing the side sliding-menu (left or right).\r\nOriginally was inspired by similar existing addons/libraries.\r\nIt has some features since it was designed for mobile applications at first:\r\n\r\n- Performance optimized for mobile applications (tested for cordova app on iOS)\r\n- It has the effect of inertia\r\n- Highly customizable\r\n- Separated handler so your app won't experience any conflict\r\n- Easy to use (see below)\r\n- For desktop apps there is a commented frost-glass effect logic (beta)\r\n\r\n## Example\r\n[Ember Cli Sliding Menu EXAMPLE](https://github.com/Blackening999/testing-menu)\r\nHere you can find convenient example with bucket of supporting features, like:\r\n- **background-overlay** which gives an opportunity to close menu by clicking to the free of opened menu\r\n- **toggle-menu** which helps to handle menu open/close via buttons click/action\r\n\r\n## Dependencies\r\n- [Hammer](https://github.com/hammerjs/hammer.js)\r\n\r\n## Usage\r\n1. Install the addon\r\n```bash\r\n  $ ember install:addon ember-cli-sliding-menu\r\n```\r\n\r\n2. Use the component where you need it\r\n```js\r\n  {{#sliding-menu appIdentifier='.app'}}\r\n    //... your menu items goes here\r\n  {{/sliding-menu}}\r\n```\r\n\r\n3. That's all. Now everything you need is decorate your menu\r\n\r\n*P.S. In order to get rid from any possible glitches it's highly recommended to set\r\nproperty appIdentifier not to '.ember-application' container itself(default) but to its descendant.\r\nIn the example above I'm using className - '.app' for Application's View*\r\n\r\n### Configurations\r\nThere are plenty of options available.\r\n\r\n1. Transition trough menu item with menu-closing\r\nIn your application controller:\r\n```js\r\n  import Ember from 'ember';\r\n  import MenuHelper from 'testing-menu/mixins/menu-helper';\r\n  \r\n  export default Ember.Controller.extend(MenuHelper, {});\r\n```\r\n\r\nAdd menu item\r\n```js\r\n      <div class=\"menu\">\r\n          <div {{action \"transitionFromMenu\" \"home\"}} class=\"menu-item\">Home page</div>\r\n    </div>\r\n```\r\n\r\n2. Options represented by properties you can pass to component:\r\n- slideDirection: @String 'toLeft|toRight' default: 'toLeft' - menu placement, toLeft means from right to left\r\n- pannableWidth: @Number  > 0              default: 40       - width of zone where menu can be invoked\r\n- defaultSpeed: @Double   > 0.00 && < 1.00 default: 0.03     - menu animation speed\r\n\r\n### Authors and Contributors\r\n[Vladimir Katansky](http://github.com/Blackening999)\r\n\r\n### Support or Contact\r\nHaving trouble with addon? Contact pointhomefinal@gmail.com and Iâ€™ll help you sort it out.\r\n\r\n###What's next?\r\nI'm going to write a blog post on [my blog](https://katansky-blog.com) about how everything works for educational purposes.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}